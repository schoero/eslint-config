{
  "$schema": "https://json.schemastore.org/eslintrc",
  "env": {
    "browser": true,
    "es6": true,
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:jsonc/recommended-with-jsonc",
    "plugin:yml/standard",
    "plugin:markdown/recommended",
    "plugin:jsdoc/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "plugins": [
    "@typescript-eslint",
    "unused-imports",
    "jsdoc",
    "import-newlines",
    "typescript-sort-keys",
    "simple-import-sort",
    "import",
    "sort-keys",
    "sort-destructure-keys",
    "unicorn",
    "jsonc",
    "yml",
    "markdown",
    "tailwindcss",
    "vitest"
  ],
  "settings": {
    "jsdoc": {
      "mode": "jsdoc",
      "tagNamePreference": {
        "default": "defaultValue"
      }
    }
  },

  // eslint-disable-next-line jsonc/sort-keys
  "overrides": [

    // JavaScript
    {
      "files": ["*.js", "*.jsx"],
      "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
      }
    },

    // TypeScript
    {
      "files": ["*.ts", "*.tsx", "*.mts", "*.mtsx", "*.cts", "*.ctsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "project": ["tsconfig.json"],
        "sourceType": "module"
      },
      "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": ["warn", { "default": "array", "readonly": "array" }],
        "@typescript-eslint/await-thenable": "warn",
        "@typescript-eslint/ban-ts-comment": ["warn", { "ts-ignore": "allow-with-description" }],
        "@typescript-eslint/consistent-type-imports": ["warn", { "disallowTypeAnnotations": false }],

        "brace-style": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/brace-style": ["warn", "1tbs", { "allowSingleLine": true }],

        "comma-dangle": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/comma-dangle": ["warn", "never"],

        "comma-spacing": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/comma-spacing": ["warn", { "after": true, "before": false }],

        "@typescript-eslint/consistent-generic-constructors": ["warn", "constructor"],

        "dot-notation": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/dot-notation": ["warn", { "allowKeywords": true }],

        "func-call-spacing": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/func-call-spacing": ["warn", "never"],

        "indent": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/indent": ["warn", 2, { "SwitchCase": 1 }],

        "keyword-spacing": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/keyword-spacing": [
          "warn",
          {
            "after": true,
            "before": true,
            "overrides": {
              "else": {
                "after": true,
                "before": true
              },
              "for": {
                "after": false
              },
              "if": {
                "after": false,
                "before": false
              },
              "while": {
                "after": false
              }
            }
          }
        ],

        "lines-between-class-members": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/lines-between-class-members": ["warn", "always", { "exceptAfterSingleLine": true }],

        "@typescript-eslint/member-delimiter-style": [
          "warn",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "multilineDetection": "brackets",
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            }
          }
        ],
        "@typescript-eslint/method-signature-style": ["warn", "method"],
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "filter": {
              "match": false,
              "regex": "^[0-9]*$"
            },
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "allow",
            "selector": "objectLiteralProperty",
            "trailingUnderscore": "allow"
          },
          {
            "format": ["camelCase", "UPPER_CASE"],
            "leadingUnderscore": "allow",
            "selector": "variable"
          },
          {
            "custom": {
              "match": false,
              "regex": "^I[A-Z]"
            },
            "format": ["PascalCase"],
            "selector": "interface"
          },
          {
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "selector": "parameter"
          },
          {
            "format": ["camelCase"],
            "leadingUnderscore": "require",
            "modifiers": ["private"],
            "selector": "memberLike"
          },
          {
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "allow",
            "modifiers": ["override"],
            "selector": "memberLike",
            "trailingUnderscore": "allow"
          },
          {
            "format": ["UPPER_CASE", "PascalCase"],
            "selector": "enumMember"
          },
          {
            "format": ["PascalCase"],
            "selector": "typeLike"
          },
          {
            "format": ["PascalCase"],
            "selector": "class",
            "trailingUnderscore": "allow"
          }
        ],
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",

        "no-dupe-class-members": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/no-dupe-class-members": "error",

        "no-extra-parens": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/no-extra-parens": "warn",

        "no-extra-semi": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/no-extra-semi": "warn",
        "@typescript-eslint/no-floating-promises": "warn",

        "no-loss-of-precision": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/no-loss-of-precision": "warn",

        "@typescript-eslint/no-misused-new": "warn",
        "@typescript-eslint/no-misused-promises": "warn",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
        "@typescript-eslint/no-redundant-type-constituents": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "@typescript-eslint/no-unnecessary-type-constraint": "warn",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/prefer-as-const": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "warn",
        "@typescript-eslint/promise-function-async": "warn",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": [
          "warn",
          {
            "allowBoolean": true,
            "allowNullish": true,
            "allowNumber": true
          }
        ],

        "no-unused-expressions": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/no-unused-expressions": [
          "warn",
          {
            "allowShortCircuit": true,
            "allowTaggedTemplates": true,
            "allowTernary": true
          }
        ],

        "object-curly-spacing": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/object-curly-spacing": ["warn", "always"],

        "padding-line-between-statements": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/padding-line-between-statements": [
          "warn",
          {
            "blankLine": "always",
            "next": "*",
            "prev": "class"
          },
          {
            "blankLine": "always",
            "next": "class",
            "prev": "*"
          }
        ],

        "quotes": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/quotes": ["warn", "double", { "avoidEscape": true, "allowTemplateLiterals": false }],

        "semi": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/semi": "warn",

        "@typescript-eslint/sort-type-constituents": "warn",

        "space-infix-ops": "off", // eslint-disable-next-line jsonc/sort-keys
        "@typescript-eslint/space-infix-ops": "warn",

        "@typescript-eslint/type-annotation-spacing": "warn",
        "@typescript-eslint/unified-signatures": ["warn", { "ignoreDifferentlyNamedParameters": true }],

        // Disable JSDoc types
        "jsdoc/no-types": "warn",
        "jsdoc/require-param-type": "off",
        "jsdoc/require-property-type": "off",
        "jsdoc/require-returns-type": "off",

        "no-restricted-syntax": [
          "warn",
          {
            "message": "No number keys. Number keys get internally converted to strings and should be avoided.",
            "selector": "TSIndexSignature > Identifier[name='key'] > TSTypeAnnotation:has(TSNumberKeyword)"
          }
        ],
        "no-undef": "off",
        "typescript-sort-keys/interface": [
          "warn",
          "asc",
          {
            "caseSensitive": true,
            "natural": true,
            "requiredFirst": true
          }
        ],
        "typescript-sort-keys/string-enum": "warn"

      },
      "settings": {
        "jsdoc": {
          "mode": "typescript"
        }
      }
    },

    // TSX
    {
      "files": ["*.tsx", "*.mtsx", "*.ctsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "project": ["tsconfig.json"],
        "sourceType": "module"
      },
      "rules": {
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "filter": {
              "match": false,
              "regex": "^__+"
            },
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "allow",
            "selector": "variable"
          }
        ]
      }
    },

    // Vitest type tests
    {
      "files": ["*.test-d.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "ecmaVersion": "latest",
        "project": ["tsconfig.json"],
        "sourceType": "module"
      },
      "rules": {
        "vitest/expect-expect": "off",
        "vitest/prefer-lowercase-title": "off"
      }
    },

    // config js files
    {
      "files": ["*.config.js"],
      "rules": {
        "jsdoc/valid-types": "off"
      }
    },

    // Standalone TypeScript
    {
      "files": [
        "**/*.config.ts",
        "**/*.config.mts",
        "**/*.config.cts",
        "**/*.md/*.ts",
        "**/*.md/*.tsx",
        "**/*.md/*.mts",
        "**/*.md/*.mtsx",
        "**/*.md/*.cts",
        "**/*.md/*.ctsx"
      ],
      "extends": ["plugin:@typescript-eslint/disable-type-checked"]
    },

    // JSON
    {
      "excludedFiles": ["package-lock.json", "yarn.lock", ".vscode/settings.json"],
      "files": ["*.json", "*.json5", "*.jsonc"],
      "parser": "jsonc-eslint-parser",
      "rules": {
        "jsonc/array-bracket-spacing": ["warn", "never"],
        "jsonc/array-element-newline": ["warn", "consistent"],
        "jsonc/comma-dangle": ["warn", "never"],
        "jsonc/comma-style": ["warn", "last"],
        "jsonc/indent": ["warn", 2],
        "jsonc/key-spacing": ["warn", { "afterColon": true, "beforeColon": false }],
        "jsonc/object-curly-newline": ["warn", { "consistent": true, "multiline": true }],
        "jsonc/object-curly-spacing": ["warn", "always"],
        "jsonc/object-property-newline": ["warn", { "allowMultiplePropertiesPerLine": true }],
        "jsonc/sort-keys": [
          "warn",
          "asc",
          {
            "caseSensitive": false,
            "minKeys": 2,
            "natural": true
          }
        ]
      }
    },

    // Package json
    {
      "files": ["package.json"],
      "rules": {
        "jsonc/sort-keys": [
          "warn",
          {
            "order": {
              "caseSensitive": true,
              "natural": true,
              "type": "asc"
            },
            "pathPattern": "^.*..*$"
          },
          {
            "order": [
              "version",
              "type",
              "name",
              "displayName",
              "description",
              "license",
              "publisher",
              "author",
              "funding",
              "private",
              "homepage",
              "repository",
              "bugs",
              "sideEffects",
              "contributes",
              "exports",
              "types",
              "main",
              "browser",
              "bin",
              "module",
              "unpkg",
              "jsdelivr",
              "scripts",
              "engines",
              "files",
              "icon",
              "peerDependencies",
              "peerDependenciesMeta",
              "dependencies",
              "optionalDependencies",
              "overrides",
              "devDependencies",
              "categories",
              "keywords",
              "volta",
              {
                "order": {
                  "caseSensitive": true,
                  "natural": true,
                  "type": "asc"
                }
              }
            ],
            "pathPattern": "^$"
          },
          {
            "order": [
              "types",
              "require",
              "import"
            ],
            "pathPattern": "^exports.*$"
          }
        ]
      }
    },

    // TSConfig json
    {
      "files": ["tsconfig.json", "tsconfig.*.json"],
      "rules": {
        "jsonc/sort-keys": [
          "warn",
          {
            "order": {
              "caseSensitive": true,
              "natural": true,
              "type": "asc"
            },
            "pathPattern": "^.*..*$"
          },
          {
            "order": [
              "extends",
              "compilerOptions",
              "include",
              "exclude"
            ],
            "pathPattern": "^$"
          }
        ]
      }
    },

    // eslintrc json
    {
      "files": [".eslintrc.json", "eslintrc.json"],
      "rules": {
        "jsonc/sort-keys": [
          "warn",
          {
            "order": {
              "caseSensitive": true,
              "natural": true,
              "type": "asc"
            },
            "pathPattern": "^.*..*$"
          },
          {
            "order": [
              "extends",
              "plugins",
              "overrides",
              "rules"
            ],
            "pathPattern": "^$"
          }
        ]
      }
    },

    // YAML
    {
      "excludedFiles": ["pnpm-lock.yaml"],
      "files": ["*.yaml", "*.yml"],
      "parser": "yaml-eslint-parser",
      "rules": {
        "yml/quotes": ["warn", { "avoidEscape": true, "prefer": "double" }],
        "yml/sort-keys": [
          "warn",
          "asc",
          {
            "caseSensitive": false,
            "minKeys": 2,
            "natural": true
          }
        ]
      }
    },

    // GitHub CI/CD
    {
      "files": ["**/.github/workflows/*.yaml", "**/.github/workflows/*.yml"],
      "parser": "yaml-eslint-parser",
      "rules": {
        "yml/sort-keys": [
          "warn",
          {
            "order": [
              "name",
              "on",
              "jobs"
            ],
            "pathPattern": "^$"
          },
          {
            "order": [
              "audit",
              "verify",
              "lint",
              "test",
              "build",
              "docs",
              "documentation",
              "pages",
              "deploy",
              "publish",
              "release"
            ],
            "pathPattern": "^jobs.*"
          },
          {
            "order": {
              "caseSensitive": true,
              "natural": true,
              "type": "asc"
            },
            "pathPattern": "^.*$"
          }
        ]
      }
    },

    // Markdown
    {
      "files": ["**/*.md"],
      "processor": "markdown/markdown"
    },
    {
      "files": [
        "**/*.md/*.ts",
        "**/*.md/*.tsx",
        "**/*.md/*.mts",
        "**/*.md/*.mtsx",
        "**/*.md/*.cts",
        "**/*.md/*.ctsx",
        "**/*.md/*.js",
        "**/*.md/*.jsx",
        "**/*.md/*.mjs",
        "**/*.md/*.mjsx",
        "**/*.md/*.cjs",
        "**/*.md/*.cjsx"
      ],
      "rules": {
        "import/newline-after-import": ["warn", { "count": 1 }],
        "unused-imports/no-unused-imports": "off"
      }
    }

  ],

  // Default (JavaScript)
  "rules": {
    "array-bracket-newline": ["warn", "consistent"],
    "array-bracket-spacing": ["warn", "never"],
    "array-element-newline": ["warn", "consistent"],
    "arrow-body-style": "off",
    "arrow-parens": ["warn", "as-needed"],
    "arrow-spacing": ["warn", { "after": true, "before": true }],
    "brace-style": ["warn", "1tbs", { "allowSingleLine": true }],
    "comma-dangle": ["warn", "never"],
    "comma-spacing": ["warn", { "after": true, "before": false }],
    "comma-style": ["warn", "last"],
    "computed-property-spacing": ["warn", "never"],
    "curly": ["warn", "all"],
    "dot-location": ["warn", "property"],
    "dot-notation": ["warn", { "allowKeywords": true }],
    "eol-last": ["warn", "always"],
    "eqeqeq": ["warn", "always"],
    "func-call-spacing": ["warn", "never"],
    "func-style": ["warn", "declaration", { "allowArrowFunctions": true }],
    "function-paren-newline": ["warn", "multiline-arguments"],
    "import/first": "warn",
    "import/newline-after-import": ["warn", { "count": 2 }],
    "import/no-duplicates": "warn",
    "import/no-self-import": "warn",
    "import/no-useless-path-segments": ["warn", { "noUselessIndex": false }],
    "import/order": "off",
    "import-newlines/enforce": ["warn", { "items": 6, "max-len": 119 }],
    "indent": ["warn", 2, { "SwitchCase": 1 }],

    // JSDoc
    "jsdoc/check-alignment": "warn",
    "jsdoc/check-indentation": "warn",
    "jsdoc/check-param-names": ["warn", {
      "enableFixer": true
    }],
    "jsdoc/check-property-names": "warn",
    "jsdoc/check-tag-names": ["warn", {
      "definedTags": [
        "alpha",
        "beta",
        "default",
        "defaultValue",
        "eventProperty",
        "remarks"
      ]
    }],
    "jsdoc/no-bad-blocks": "warn",
    "jsdoc/no-blank-block-descriptions": "warn",
    "jsdoc/no-blank-blocks": ["warn", {
      "enableFixer": true
    }],
    "jsdoc/no-defaults": "warn",
    "jsdoc/no-multi-asterisks": "warn",
    "jsdoc/require-asterisk-prefix": "warn",
    "jsdoc/require-description": "warn",
    "jsdoc/require-hyphen-before-param-description": ["warn", "never"],
    "jsdoc/require-jsdoc": "off",
    "jsdoc/require-param-description": "warn",
    "jsdoc/require-param-name": "warn",
    "jsdoc/require-returns": "warn",
    "jsdoc/require-returns-description": "warn",
    "jsdoc/require-throws": "warn",
    "jsdoc/require-yields": "warn",
    "jsdoc/sort-tags": "warn",

    "jsx-quotes": ["warn", "prefer-double"],
    "key-spacing": ["warn", { "afterColon": true, "beforeColon": false }],
    "keyword-spacing": [
      "warn",
      {
        "after": true,
        "before": true,
        "overrides": {
          "else": {
            "after": true,
            "before": true
          },
          "for": {
            "after": false
          },
          "if": {
            "after": false,
            "before": false
          },
          "while": {
            "after": false
          }
        }
      }
    ],
    "linebreak-style": ["warn", "unix"],
    "logical-assignment-operators": ["warn", "always", { "enforceForIfStatements": true }],
    "multiline-ternary": ["warn", "always-multiline"],
    "newline-per-chained-call": ["warn", { "ignoreChainWithDepth": 2 }],
    "no-constant-binary-expression": "warn",
    "no-dupe-class-members": "error",
    "no-duplicate-imports": "off",
    "no-empty": ["warn", { "allowEmptyCatch": true }],
    "no-empty-static-block": "warn",
    "no-extra-bind": "warn",
    "no-extra-parens": "warn",
    "no-extra-semi": "warn",
    "no-loss-of-precision": "warn",
    "no-mixed-spaces-and-tabs": "warn",
    "no-multi-spaces": ["warn", { "exceptions": { "Property": true }, "ignoreEOLComments": true }],
    "no-multiple-empty-lines": ["warn", { "max": 2, "maxBOF": 0, "maxEOF": 0 }],
    "no-new-native-nonconstructor": "error",
    "no-return-await": "warn",
    "no-trailing-spaces": "warn",
    "no-unexpected-multiline": "warn",
    "no-unneeded-ternary": "warn",
    "no-unused-expressions": [
      "warn",
      {
        "allowShortCircuit": true,
        "allowTaggedTemplates": true,
        "allowTernary": true
      }
    ],
    "no-unused-labels": "warn",
    "no-unused-vars": "off",
    "no-useless-call": "warn",
    "no-useless-catch": "warn",
    "no-useless-computed-key": "warn",
    "no-useless-concat": "warn",
    "no-useless-constructor": "warn",
    "no-useless-escape": "warn",
    "no-useless-rename": "warn",
    "no-useless-return": "warn",
    "no-var": "warn",
    "no-whitespace-before-property": "warn",
    "object-curly-newline": ["warn", {
      "ExportDeclaration": { "consistent": true, "multiline": true },
      "ImportDeclaration": { "consistent": true, "multiline": true },
      "ObjectExpression": { "consistent": true, "multiline": true },
      "ObjectPattern": { "consistent": true, "multiline": true }
    }],
    "object-curly-spacing": ["warn", "always"],
    "object-property-newline": ["warn", { "allowMultiplePropertiesPerLine": true }],
    "object-shorthand": ["warn", "always", { "avoidQuotes": true }],
    "one-var-declaration-per-line": ["warn", "always"],
    "operator-linebreak": ["warn", "after", { "overrides": { ":": "before", "?": "before" } }],
    "padding-line-between-statements": [
      "warn",
      {
        "blankLine": "always",
        "next": "*",
        "prev": "class"
      },
      {
        "blankLine": "always",
        "next": "class",
        "prev": "*"
      }
    ],
    "prefer-arrow-callback": "warn",
    "prefer-const": "warn",
    "prefer-exponentiation-operator": "warn",
    "prefer-object-spread": "warn",
    "prefer-template": "warn",
    "quote-props": ["warn", "consistent-as-needed"],
    "quotes": ["warn", "double", { "allowTemplateLiterals": false, "avoidEscape": true }],
    "radix": "warn",
    "rest-spread-spacing": ["warn", "never"],
    "semi": "warn",
    "semi-spacing": ["warn", { "after": true, "before": false }],
    "semi-style": ["warn", "last"],
    "simple-import-sort/exports": "warn", // eslint-disable-next-line jsonc/sort-keys
    "sort-imports": "off", // eslint-disable-next-line jsonc/sort-keys
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          // Side effect imports.
          ["^\\u0000"],
          // Node builtins
          ["^node:"],
          // External packages.
          ["^"],
          // Internal packages.
          ["^@"],
          ["^(?!node:)(.*):"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?.*\\u0000$)", "^\\.\\./?(?!.*\\u0000$)"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?.*\\u0000$)", "^\\.(?!/?.*\\u0000$)", "^\\./?(?!.*\\u0000$)"],
          // Style imports.
          ["^.+\\.s?css$"],
          // JSON imports.
          ["^.+\\.jsonc?$"],

          // Type imports
          ["^node:(.*)\\u0000$"],
          // Types from external packages.
          ["\\u0000$"],
          // Types from internal packages.
          ["^@(.*)\\u0000$"],
          ["^(?!node:)(.*):(.*)\\u0000$"],
          // Types from parent imports. Put `..` last.
          ["^\\.\\.(?=/?\\u0000$)", "^\\.\\./?\\u0000$"],
          // Types from other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*\\u0000$)", "^\\.(?=/?\\u0000$)", "^\\./?\\u0000$"]
        ]
      }
    ],
    "sort-destructure-keys/sort-destructure-keys": "warn",
    "sort-keys": "off",
    "sort-keys/sort-keys-fix": "warn",
    "space-before-blocks": ["warn", { "classes": "always", "functions": "always", "keywords": "never" }],
    "space-before-function-paren": ["warn", { "anonymous": "never", "asyncArrow": "always", "named": "never" }],
    "space-in-parens": ["warn", "never"],
    "space-infix-ops": "warn",
    "space-unary-ops": [
      2, {
        "nonwords": false,
        "words": true
      }],
    "spaced-comment": ["warn", "always", { "exceptions": ["-", "+"], "markers": ["--"] }],

    // Tailwind CSS
    "tailwindcss/classnames-order": "warn",
    "tailwindcss/enforces-negative-arbitrary-values": "warn",
    "tailwindcss/enforces-shorthand": "warn",
    "tailwindcss/no-contradicting-classname": "warn",
    "tailwindcss/no-custom-classname": "off",

    // Unicorn
    "template-curly-spacing": ["warn", "never"],
    "template-tag-spacing": ["warn", "never"],
    "unicorn/better-regex": "warn",
    "unicorn/consistent-destructuring": "warn",
    "unicorn/empty-brace-spaces": "warn",
    "unicorn/error-message": "warn",
    "unicorn/no-await-expression-member": "warn",
    "unicorn/no-empty-file": "warn",
    "unicorn/no-instanceof-array": "warn",
    "unicorn/no-unreadable-array-destructuring": "warn",
    "unicorn/no-unsafe-regex": "warn",
    "unicorn/no-useless-length-check": "warn",
    "unicorn/no-useless-spread": "warn",
    "unicorn/no-useless-undefined": ["warn", {
      "checkArguments": false
    }],
    "unicorn/number-literal-case": "warn",
    "unicorn/numeric-separators-style": ["warn", {
      "binary": {
        "groupLength": 4,
        "minimumDigits": 0
      },
      "hexadecimal": {
        "groupLength": 2,
        "minimumDigits": 0
      },
      "number": {
        "groupLength": 3,
        "minimumDigits": 5
      },
      "octal": {
        "groupLength": 4,
        "minimumDigits": 0
      },
      "onlyIfContainsSeparator": true
    }],
    "unicorn/prefer-date-now": "warn",
    "unicorn/prefer-export-from": ["warn", { "ignoreUsedVariables": true }],
    "unicorn/prefer-negative-index": "warn",
    "unicorn/prefer-node-protocol": "warn",
    "unicorn/template-indent": [
      "warn",
      {
        "tags": [
          "ts"
        ]
      }
    ],
    "unicorn/throw-new-error": "warn",
    "unused-imports/no-unused-imports": "warn",
    "unused-imports/no-unused-vars": "off",

    // Vitest
    "vitest/expect-expect": "warn",
    "vitest/no-alias-methods": "warn",
    "vitest/no-identical-title": "warn",
    "vitest/prefer-comparison-matcher": "warn",
    "vitest/prefer-each": "warn",
    "vitest/prefer-equality-matcher": "warn",
    "vitest/prefer-lowercase-title": "warn",
    "vitest/prefer-to-be": "warn",
    "vitest/prefer-to-be-object": "warn",
    "vitest/prefer-to-contain": "warn",
    "vitest/prefer-to-have-length": "warn",
    "vitest/prefer-todo": "warn",
    "vitest/valid-expect": "warn",
    "vitest/valid-title": "warn",

    "yield-star-spacing": ["warn", { "after": false, "before": true }],
    "yoda": "warn"

  }
}
